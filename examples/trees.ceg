(
(data Nat (Z S))
(:: Z Nat)
(:: S (-> (Nat) Nat))

(data Tree (Leaf Node))
(:: Leaf (Tree ?a)                              )
(:: Node (-> ((Tree ?a) ?a (Tree ?a)) (Tree ?a)))  

(:: max (-> (Nat Nat) Nat))
(=> (max Z      ?y    ) ?y             )
(=> (max ?x     Z     ) ?x             )
(=> (max (S ?x) (S ?y)) (S (max ?x ?y)))

(:: height (-> ((Tree ?a)) Nat))
(=> (height Leaf           ) Z                                )
(=> (height (Node ?l ?x ?r)) (S (max (height ?l) (height ?r))))

(:: mirror (-> ((Tree ?a)) (Tree ?a)))
(=> (mirror Leaf           ) Leaf                             )
(=> (mirror (Node ?l ?x ?r)) (Node (mirror ?r) ?x (mirror ?l)))

(=== prop_47 (t) ((Tree a))
  (height (mirror t))
  (height t)
)
)