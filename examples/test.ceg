(
(data Bool (True False))
(:: True Bool)
(:: False Bool)

(data Nat (Z S))
(:: Z Nat)
(:: S (-> (Nat) Nat))

(data List (Nil Cons))
(:: Nil  (List ?a)                    )
(:: Cons (-> (?a (List ?a)) (List ?a)))

(:: id (-> (?a) ?a))
(=> (id ?x) ?x)

(:: add (-> (Nat Nat) Nat))
(=> (add Z      ?y) ?y             )
(=> (add (S ?x) ?y) (S (add ?x ?y)))

(:: sub (-> (Nat Nat) Nat))
(=> (sub ?x Z)          ?x         )
(=> (sub Z ?y)          Z          )
(=> (sub (S ?x) (S ?y)) (sub ?x ?y))

(:: lt (-> (Nat Nat) Bool))
(=> (lt ?x     Z     ) False     )
(=> (lt Z      (S ?y)) True      )
(=> (lt (S ?x) (S ?y)) (lt ?x ?y))

(:: leq (-> (Nat Nat) Bool))
(=> (leq Z      ?y) True           )
(=> (leq (S ?x) Z ) False          )
(=> (leq (S ?x) (S ?y)) (leq ?x ?y))

(:: eq (-> (Nat Nat) Bool))
(=> (eq Z      Z     ) True      )
(=> (eq Z      (S ?y)) False     )
(=> (eq (S ?x) Z     ) False     )
(=> (eq (S ?x) (S ?y)) (eq ?x ?y))

(:: ite (-> (Bool ?a ?a) ?a))
(=> (ite True ?x ?y ) ?x)
(=> (ite False ?x ?y) ?y)

(:: head (-> (List ?a) ?a))
(=> (head Nil) Z)
(=> (head (Cons ?x ?xs)) ?x)

(:: map (-> ((-> ?a ?b) (List ?a)) (List ?b)))
(=> (map ?f Nil          ) Nil                          )
(=> (map ?f (Cons ?x ?xs)) (Cons ($ ?f ?x) (map ?f ?xs)))

(:: elem (-> (Nat (List Nat)) Bool))
(=> (elem ?n Nil          ) False                            )
(=> (elem ?n (Cons ?x ?xs)) (ite (eq ?n ?x) True (elem ?n ?xs)))

(:: append (-> ((List ?a) (List ?a)) (List ?a)))
(=> (append Nil           ?ys) ?ys                       )
(=> (append (Cons ?x ?xs) ?ys) (Cons ?x (append ?xs ?ys)))

(=== funny (x) (Nat)
  (ite (lt Z x) (eq x x) False)
  False
)

(=== good1 (n m) (Nat Nat)
  True
  (lt n (add n (S m)))  
)

(=== bad1 (n m) (Nat Nat)
  (add n n)
  (add m m)  
)

(=== good2 (x y) (Nat Nat)
  (ite (leq x y) x x)
  x
)

(=== good3 (xs) ((List Nat))
  (sub (head xs) (head xs))
  Z
)

(=== good4 (xs) ((List a))
  (map id xs)
  xs
)

(=== addComm (n m) (Nat Nat)
  (add n m)
  (add m n)
)

(=== good5 (n) (Nat)
  (add (sub n n) n)
  n
)

(=== n_sn (n) (Nat)
  (add n (S n))
  (S (add n n))
)

(=== n_sn_provable (m n) (Nat)
  (add m (S n))
  (S (add m n))
)

(=== prop_69 (n m) (Nat Nat)
  (leq n (add m n))
  True
)

(// (=> (add ?x (S ?y)) (S (add ?x ?y))))
(// (=> (leq (add ?m ?n)) (leq (add ?m (S ?n)))))
(// (=> (leq (add ?m (S ?n))) (leq (add ?m ?n))))
(=== prop_69_lem (n m) (Nat Nat)
  (leq n (add m n))
  (leq n (add m (S n)))
)

(// (=== right_s (n m) (Nat Nat)
  (add m (S n))
  (S (add m n))
)

(=== right_s_add (n m) (Nat Nat)
  (add n (add m (S n)))
  (add n (S (add m n)))
)

(=== right_s_add_k (k n m) (Nat Nat Nat)
  (add k (add m (S n)))
  (add k (S (add m n)))
)

(=== right_s_leq (n m) (Nat Nat)
  (leq n (add m (S n)))
  (leq n (S (add m n)))
)

(=== right_s_leq_k (k n m) (Nat Nat Nat)
  (leq k (add m (S n)))
  (leq k (S (add m n)))
))

(=== prop_28 (x xs) (Nat (List Nat))
  (elem x (append xs (Cons x Nil)))
  True
)

)
