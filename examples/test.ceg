(
(data Bool (True False))
(:: True Bool)
(:: False Bool)

(data Nat (Z S))
(:: Z Nat)
(:: S (-> (Nat) Nat))

(:: add (-> (Nat Nat) Nat))
(=> (add Z      ?y) ?y             )
(=> (add (S ?x) ?y) (S (add ?x ?y)))

(:: sub (-> (Nat Nat) Nat))
(=> (sub ?x Z)          ?x         )
(=> (sub Z ?y)          Z          )
(=> (sub (S ?x) (S ?y)) (sub ?x ?y))

(:: lt (-> (Nat Nat) Bool))
(=> (lt ?x     Z     ) False     )
(=> (lt Z      (S ?y)) True      )
(=> (lt (S ?x) (S ?y)) (lt ?x ?y))

(=== good1 (n m) (Nat Nat)
  True
  (lt n (add n (S m)))  
)

(=== bad1 (n m) (Nat Nat)
  (add n n)
  (add m m)  
)
)