(
(data Bool (True False))
(:: True Bool)
(:: False Bool)

(data Nat (Z S))
(:: Z Nat)
(:: S (-> (Nat) Nat))

(data List (Nil Cons))
(:: Nil  (List ?a)                    )
(:: Cons (-> (?a (List ?a)) (List ?a)))

(:: ite (-> (Bool ?a ?a) ?a))
(=> (ite True ?x ?y ) ?x)
(=> (ite False ?x ?y) ?y)

(:: and (-> (Bool Bool) Bool))
(=> (and False ?y) False)
(=> (and ?x False) False)
(=> (and True True) True)

(:: leq (-> (Nat Nat) Bool))
(=> (leq Z      ?y) True           )
(=> (leq (S ?x) Z ) False          )
(=> (leq (S ?x) (S ?y)) (leq ?x ?y))

(:: insort (-> (Nat (List Nat)) (List Nat)))
(=> (insort ?n Nil          ) (Cons ?n Nil)                                                      )
(=> (insort ?n (Cons ?x ?xs)) (ite (leq ?n ?x) (Cons ?n (Cons ?x ?xs)) (Cons ?x (insort ?n ?xs))))

(:: sort (-> ((List Nat)) (List Nat)))
(=> (sort Nil          ) Nil                   )
(=> (sort (Cons ?x ?xs)) (insort ?x (sort ?xs)))

(:: sorted (-> ((List Nat)) Bool))
(=> (sorted Nil                    ) True                                )
(=> (sorted (Cons ?x Nil)          ) True                                )
(=> (sorted (Cons ?x (Cons ?y ?ys))) (and (leq ?x ?y) (sorted (Cons ?y ?ys))))

(=== prop_78 (xs) ((List Nat))
  (sorted (sort xs))
  True
)

(=== insort_test (x xs) (Nat (List Nat))
  (sorted (insort x xs))
  (sorted xs)
)
)
